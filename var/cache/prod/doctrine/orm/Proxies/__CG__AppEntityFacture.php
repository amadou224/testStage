<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Facture extends \App\Entity\Facture implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Facture' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Facture' . "\0" . 'prixTotal', '' . "\0" . 'App\\Entity\\Facture' . "\0" . 'TVA', '' . "\0" . 'App\\Entity\\Facture' . "\0" . 'horsTaxe', '' . "\0" . 'App\\Entity\\Facture' . "\0" . 'status', '' . "\0" . 'App\\Entity\\Facture' . "\0" . 'dateFacture', '' . "\0" . 'App\\Entity\\Facture' . "\0" . 'reservation', '' . "\0" . 'App\\Entity\\Facture' . "\0" . 'supplement'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Facture' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Facture' . "\0" . 'prixTotal', '' . "\0" . 'App\\Entity\\Facture' . "\0" . 'TVA', '' . "\0" . 'App\\Entity\\Facture' . "\0" . 'horsTaxe', '' . "\0" . 'App\\Entity\\Facture' . "\0" . 'status', '' . "\0" . 'App\\Entity\\Facture' . "\0" . 'dateFacture', '' . "\0" . 'App\\Entity\\Facture' . "\0" . 'reservation', '' . "\0" . 'App\\Entity\\Facture' . "\0" . 'supplement'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Facture $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getPrixTotal(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrixTotal', []);

        return parent::getPrixTotal();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrixTotal(float $prixTotal): \App\Entity\Facture
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrixTotal', [$prixTotal]);

        return parent::setPrixTotal($prixTotal);
    }

    /**
     * {@inheritDoc}
     */
    public function getTVA(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTVA', []);

        return parent::getTVA();
    }

    /**
     * {@inheritDoc}
     */
    public function setTVA(float $TVA): \App\Entity\Facture
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTVA', [$TVA]);

        return parent::setTVA($TVA);
    }

    /**
     * {@inheritDoc}
     */
    public function getHorsTaxe(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHorsTaxe', []);

        return parent::getHorsTaxe();
    }

    /**
     * {@inheritDoc}
     */
    public function setHorsTaxe(?float $horsTaxe): \App\Entity\Facture
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHorsTaxe', [$horsTaxe]);

        return parent::setHorsTaxe($horsTaxe);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus(?string $status): \App\Entity\Facture
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateFacture(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateFacture', []);

        return parent::getDateFacture();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateFacture(\DateTimeInterface $dateFacture): \App\Entity\Facture
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateFacture', [$dateFacture]);

        return parent::setDateFacture($dateFacture);
    }

    /**
     * {@inheritDoc}
     */
    public function getReservation(): ?\App\Entity\Reservation
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReservation', []);

        return parent::getReservation();
    }

    /**
     * {@inheritDoc}
     */
    public function setReservation(?\App\Entity\Reservation $reservation): \App\Entity\Facture
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReservation', [$reservation]);

        return parent::setReservation($reservation);
    }

    /**
     * {@inheritDoc}
     */
    public function getSupplement(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSupplement', []);

        return parent::getSupplement();
    }

    /**
     * {@inheritDoc}
     */
    public function addSupplement(\App\Entity\supplement $supplement): \App\Entity\Facture
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSupplement', [$supplement]);

        return parent::addSupplement($supplement);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSupplement(\App\Entity\supplement $supplement): \App\Entity\Facture
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSupplement', [$supplement]);

        return parent::removeSupplement($supplement);
    }

}
